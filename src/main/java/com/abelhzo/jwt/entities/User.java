package com.abelhzo.jwt.entities;
// Generated Sep 5, 2023, 6:39:59 PM by Hibernate Tools 6.2.4.Final

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "USERS", schema = "PUBLIC", catalog = "JWTDB", uniqueConstraints = @UniqueConstraint(columnNames = "USERNAME"))
public class User implements java.io.Serializable {

	private static final long serialVersionUID = -116041343036942261L;
	private Long idUser;
	private String username;
	private String password;
	private String email;
	private LocalDate birthday;
	private byte[] photo;
	private Timestamp created;
	private Set<UserRol> userRols = new HashSet<UserRol>(0);

	public User() {
	}

	public User(Long idUser, String username, String password, String email, LocalDate birthday, byte[] photo,
			Timestamp created, Set<UserRol> userRols) {
		this.idUser = idUser;
		this.username = username;
		this.password = password;
		this.email = email;
		this.birthday = birthday;
		this.photo = photo;
		this.created = created;
		this.userRols = userRols;
	}

	@Id
	@Column(name = "ID_USER", unique = true, nullable = false)
	public Long getIdUser() {
		return this.idUser;
	}

	public void setIdUser(Long idUser) {
		this.idUser = idUser;
	}

	@Column(name = "USERNAME", unique = true, nullable = false, length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "EMAIL", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "BIRTHDAY", nullable = false, length = 10)
	public LocalDate getBirthday() {
		return this.birthday;
	}

	public void setBirthday(LocalDate birthday) {
		this.birthday = birthday;
	}

	@Column(name = "PHOTO")
	public byte[] getPhoto() {
		return this.photo;
	}

	public void setPhoto(byte[] photo) {
		this.photo = photo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED", nullable = false, length = 26)
	public Timestamp getCreated() {
		return this.created;
	}

	public void setCreated(Timestamp created) {
		this.created = created;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<UserRol> getUserRols() {
		return this.userRols;
	}

	public void setUserRols(Set<UserRol> userRols) {
		this.userRols = userRols;
	}

}
